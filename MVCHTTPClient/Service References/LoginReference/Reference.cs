//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MVCHTTPClient.LoginReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Login", Namespace="http://schemas.datacontract.org/2004/07/Core")]
    [System.SerializableAttribute()]
    public partial class Login : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UsernameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username {
            get {
                return this.UsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.UsernameField, value) != true)) {
                    this.UsernameField = value;
                    this.RaisePropertyChanged("Username");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="LoginReference.ILoginService")]
    public interface ILoginService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoginService/GetAllLogins", ReplyAction="http://tempuri.org/ILoginService/GetAllLoginsResponse")]
        System.Collections.Generic.List<MVCHTTPClient.LoginReference.Login> GetAllLogins();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoginService/GetAllLogins", ReplyAction="http://tempuri.org/ILoginService/GetAllLoginsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<MVCHTTPClient.LoginReference.Login>> GetAllLoginsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoginService/GetLogin", ReplyAction="http://tempuri.org/ILoginService/GetLoginResponse")]
        MVCHTTPClient.LoginReference.Login GetLogin(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoginService/GetLogin", ReplyAction="http://tempuri.org/ILoginService/GetLoginResponse")]
        System.Threading.Tasks.Task<MVCHTTPClient.LoginReference.Login> GetLoginAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoginService/UserExist", ReplyAction="http://tempuri.org/ILoginService/UserExistResponse")]
        bool UserExist(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoginService/UserExist", ReplyAction="http://tempuri.org/ILoginService/UserExistResponse")]
        System.Threading.Tasks.Task<bool> UserExistAsync(string username, string password);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ILoginServiceChannel : MVCHTTPClient.LoginReference.ILoginService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LoginServiceClient : System.ServiceModel.ClientBase<MVCHTTPClient.LoginReference.ILoginService>, MVCHTTPClient.LoginReference.ILoginService {
        
        public LoginServiceClient() {
        }
        
        public LoginServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public LoginServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LoginServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LoginServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Collections.Generic.List<MVCHTTPClient.LoginReference.Login> GetAllLogins() {
            return base.Channel.GetAllLogins();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<MVCHTTPClient.LoginReference.Login>> GetAllLoginsAsync() {
            return base.Channel.GetAllLoginsAsync();
        }
        
        public MVCHTTPClient.LoginReference.Login GetLogin(int id) {
            return base.Channel.GetLogin(id);
        }
        
        public System.Threading.Tasks.Task<MVCHTTPClient.LoginReference.Login> GetLoginAsync(int id) {
            return base.Channel.GetLoginAsync(id);
        }
        
        public bool UserExist(string username, string password) {
            return base.Channel.UserExist(username, password);
        }
        
        public System.Threading.Tasks.Task<bool> UserExistAsync(string username, string password) {
            return base.Channel.UserExistAsync(username, password);
        }
    }
}
